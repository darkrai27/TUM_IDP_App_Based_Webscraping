from functools import singledispatch
import requests
from pydantic import Json
from time import sleep
import json
import os
from dotenv import load_dotenv

from postSchemas import JsonPosts
load_dotenv()

# headers = {
#     'authority': 'www.threads.net',
#     'accept': '*/*',
#     'accept-language': 'es-ES,es;q=0.9,en;q=0.8,de;q=0.7,it;q=0.6',
#     'cache-control': 'no-cache',
#     'content-type': 'application/x-www-form-urlencoded',
#     # 'cookie': 'sessionid=62663395411%3ArhQQUKdNHeCIL6%3A2%3AAYdfHmD7YO7gb0TALiS9_P8yXwapNPpgtfU3GaDM7w; csrftoken=H9RevEGJ_7iFMwxmskpM_q; mid=ZS1GlAAEAAGpFpCx01r64hxDEH6q',
#     'dpr': '1',
#     'origin': 'https://www.threads.net',
#     'pragma': 'no-cache',
#     'referer': 'https://www.threads.net/@jeffnippard',
#     'sec-ch-prefers-color-scheme': 'dark',
#     'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Google Chrome";v="116"',
#     'sec-ch-ua-full-version-list': '"Chromium";v="116.0.5845.179", "Not)A;Brand";v="24.0.0.0", "Google Chrome";v="116.0.5845.179"',
#     'sec-ch-ua-mobile': '?0',
#     'sec-ch-ua-model': '""',
#     'sec-ch-ua-platform': '"Windows"',
#     'sec-ch-ua-platform-version': '"10.0.0"',
#     'sec-fetch-dest': 'empty',
#     'sec-fetch-mode': 'cors',
#     'sec-fetch-site': 'same-origin',
#     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
# }

headers = {
    'authority': 'www.threads.net',
    'accept': '*/*',
    'accept-language': 'es-ES,es;q=0.7',
    'content-type': 'application/x-www-form-urlencoded',
    'origin': 'https://www.threads.net',
    'referer': 'https://www.threads.net/search',
    'sec-ch-ua': '"Chromium";v="116", "Not)A;Brand";v="24", "Brave";v="116"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-model': '""',
    'sec-ch-ua-platform': '"macOS"',
    'sec-ch-ua-platform-version': '"13.4.0"',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    'sec-gpc': '1',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36'
  }
  
def get_post(postID: int, dtsg: str = None, session_id: str = None):

  '''
  Gets a thread with all its posts and the most relevant replies.

  Args:
    postID (int): Unique numerical identifier of a post
    dtsg (str): Value generated by Facebook to validated the session
    session_id (str): Cookie identifier for the user session

  Returns:
    List (Edge): List of objects containing all information about a thread, its different posts and the replies 
  '''


  if dtsg == None:
    dtsg = os.getenv("DTSG")
  
  if session_id == None:
    session_id = os.getenv("SESSION")
  
  data = {
      'fb_dtsg': dtsg,
      'variables': f'{{"postID":"{postID}"}}',
      'doc_id': '6607085376050279',
  }
  cookies = {
    'sessionid': session_id,
  } 


  response = requests.post('https://www.threads.net/api/graphql', cookies=cookies, headers=headers, data=data)

  print(response.text)
  return JsonPosts.model_validate_json(response.text).data.data.edges

def get_post(postID: int, dtsg: str = None, session_id: str = None, limit: int = None, delay: int = 5):

  '''
  Gets a thread with all its posts and crawls recursively all the replies up to the stablished limit.

  Args:
    postID (int): Unique numerical identifier of a post.
    dtsg (str): Value generated by Facebook to validated the session.
    session_id (str): Cookie identifier for the user session.
    limit (int): Limit size of threads to crawl.
    delay (int): Delay among requests to avoid the account of getting suspended by bot activity.

  Returns:
    List (Edge): List of objects containing all information about a thread, its different posts and all the requested replies
  '''


  if dtsg == None:
    dtsg = os.getenv("DTSG")
  
  if session_id == None:
    session_id = os.getenv("SESSION")

  pass

def get_likers(postID: int, dtsg: str = None, session_id: str = None):

  '''
  Collects the most recent likers of a post

  Args:
    postID (int): Unique numerical identifier of a post.
    dtsg (str): Value generated by Facebook to validated the session.
    session_id (str): Cookie identifier for the user session.
    limit (int): Limit size of threads to crawl.
    delay (int): Delay among requests to avoid the account of getting suspended by bot activity.

  Returns:
    List (User): List of users object containing information about users who liked the post
  '''


  if dtsg == None:
    dtsg = os.getenv("DTSG")
  
  if session_id == None:
    session_id = os.getenv("SESSION")
  pass